# JohanWiltink

Y = \ f . ( \ x . f (x x) ) ( \ x . f (x x) )
True = \ t f . t
False = \ t f . f
Succ = \ n s z . s (n s z)
Pred = \ n s z . n ( \ f g . g (f s) ) (\_.z) \x.x
Minus = \ m n . n Pred m
Times = \ m n s . m (n s)
isZero = \ n . n (\_.False) True
isNotZero = \ n . n (\_.True) False
And = \ x y . x y x
Or = \ x . x x
GT = \ x y . isNotZero (Minus x y)
Mod = \ n m . ( \ r . isZero (Minus m r) 0 r ) (( \ n m . ( \ d . isZero d n (Mod d m) ) (Minus n m) ) n m)

# function isPrime(n) {
#   const trial = function trial(i) {
#     return i * i > n || n % i != 0 && trial(i+1) ;
#   } ;
#   return n > 1 && trial(2) ;
# }

isPrime = \ n . ( \ trial . And (GT n 1) (trial 2) )
                ( Y \ trial i . Or (GT (Times i i) n) (And (isNotZero (Mod n i)) (trial (Succ i))) )
